% -------------------------------------------------------------------------
% NEMO measurements conducted in a lab.
% DL traffic was generated by iPerf3.
% Strong negative correlation between throughput and RSRQ.
% (RSRQ measures our own DL traffic.)
% Code produces results in Fig. 8 and Fig. 9 (b).
%
% For more details, see the paper:
% V. Raida, M. Lerch, P. Svoboda and M. Rupp, "Deriving Cell Load from RSRQ Measurements,"
% 2018 Network Traffic Measurement and Analysis Conference (TMA), Vienna, 2018.
%
% Accepted version (open access): https://publik.tuwien.ac.at/files/publik_271503.pdf
% Published version: https://ieeexplore.ieee.org/document/8506494
%
% (C) 2018 Vaclav Raida, TU Wien
% email: vaclav.raida@tuwien.ac.at
% -------------------------------------------------------------------------

clear; clc; close all;
%% PLOTS BEFORE BINNING

load('data/lab_nemo-parsed_neg-corr_2018-04-18.mat');  % S = signal, DL = throughput

t_first = min([S.t(1), DL.t(1)])+69.13;
t_last = 840;
S.t = S.t - t_first;    % Convert unix timestamps to relative time
DL.t = DL.t - t_first;

figure; hold on; grid on;
    sp(1) = subplot(4,1,1); hold on; grid on; ylabel('RSRP / dBm');
        plot(S.t, S.RSRP1, '.', 'DisplayName', 'Antenna 1');
        plot(S.t, S.RSRP2, '.', 'DisplayName', 'Antenna 2');
    sp(2) = subplot(4,1,2); hold on; grid on; ylabel('RSRQ / dB');
        plot(S.t, S.RSRQ1, '.', 'DisplayName', 'Antenna 1');
        plot(S.t, S.RSRQ2, '.', 'DisplayName', 'Antenna 2');
    sp(3) = subplot(4,1,3); hold on; grid on; ylabel('RSSI / dBm');
        plot(S.t, S.RSSI1, '.', 'DisplayName', 'Antenna 1');
        plot(S.t, S.RSSI2, '.', 'DisplayName', 'Antenna 2');
    sp(4) = subplot(4,1,4); hold on; grid on; ylabel('physical R / (Mbit/s)');
        plot(DL.t, DL.phrate1/10^6, '.', 'DisplayName', 'Antenna 1');
        plot(DL.t, DL.phrate2/10^6, '.', 'DisplayName', 'Antenna 2');
        plot(DL.t, (DL.phrate1 + DL.phrate2)/10^6, '.', 'DisplayName', 'Sum');
        xlabel('t / s'); legend('Location', 'northwest');
    linkaxes(sp, 'x');

    
%% BIN THE DATA

t_edges = 0 : 10 : t_last;

S.RSRP1_binned    = f.bin_signal(S.t, S.RSRP1, t_edges);
S.RSRP2_binned    = f.bin_signal(S.t, S.RSRP2, t_edges);

S.RSRQ1_binned    = f.bin_signal(S.t, S.RSRQ1, t_edges);
S.RSRQ2_binned    = f.bin_signal(S.t, S.RSRQ2, t_edges);

S.RSSI1_binned    = f.bin_signal(S.t, S.RSSI1, t_edges);
S.RSSI2_binned    = f.bin_signal(S.t, S.RSSI2, t_edges);

DL.phrate1_binned = f.bin_signal(DL.t, DL.phrate1/10^6, t_edges);
DL.phrate2_binned = f.bin_signal(DL.t, DL.phrate2/10^6, t_edges);


%% PLOTS AFTER BINNING

phrate_binned_total = DL.phrate1_binned + DL.phrate2_binned;  % Sum throughput of both ports
  
figure; hold on; grid on;
    sp(1) = subplot(4,1,1); hold on; grid on; ylabel('RSRP / dBm');
        stairs(t_edges, [S.RSRP1_binned S.RSRP1_binned(end)], 'DisplayName', 'Antenna 1');
        stairs(t_edges, [S.RSRP2_binned S.RSRP2_binned(end)], 'DisplayName', 'Antenna 2');
        legend('Location', 'northwest');
    sp(2) = subplot(4,1,2); hold on; grid on; ylabel('RSRQ / dB');
        stairs(t_edges, [S.RSRQ1_binned S.RSRQ1_binned(end)], 'DisplayName', 'Antenna 1');
        stairs(t_edges, [S.RSRQ2_binned S.RSRQ2_binned(end)], 'DisplayName', 'Antenna 2');
        legend('Location', 'northwest');
    sp(3) = subplot(4,1,3); hold on; grid on; ylabel('RSSI / dBm');
        stairs(t_edges, [S.RSSI1_binned S.RSSI1_binned(end)], 'DisplayName', 'Antenna 1');
        stairs(t_edges, [S.RSSI2_binned S.RSSI2_binned(end)], 'DisplayName', 'Antenna 2');
        legend('Location', 'southwest');
    sp(4) = subplot(4,1,4); hold on; grid on; ylabel('physical R / (Mbit/s)');
        stairs(t_edges, [DL.phrate1_binned DL.phrate1_binned(end)], 'DisplayName', 'Antenna 1');
        stairs(t_edges, [DL.phrate2_binned DL.phrate2_binned(end)], 'DisplayName', 'Antenna 2');
        stairs(t_edges, [phrate_binned_total phrate_binned_total(end)], 'DisplayName', 'Sum');
        xlabel('t / s'); legend('Location', 'northeast');
    linkaxes(sp, 'x');

% Negative correlation between RSRQ and throughput
figure; hold on; grid on;
    scatter(S.RSRQ1_binned, phrate_binned_total, '.');
    xlabel('RSRQ / dB'); ylabel('R / (Mbit/s)');
    r = corrcoef(phrate_binned_total.', S.RSRQ1_binned.')

