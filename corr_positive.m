% -------------------------------------------------------------------------
% Measurements collected during an outdoor campaign.
% DL traffic was generated by iPerf3. Signal indicators were reported by Android OS.
% Strong positive correlation between throughput and RSRQ.
% (RSRQ was measured properly, i.e., in intervals with zero throughput of the measuring UE.)
% Code produces results in Fig. 7 and Fig. 9 (a).
%
% For more details, see the paper:
% V. Raida, M. Lerch, P. Svoboda and M. Rupp, "Deriving Cell Load from RSRQ Measurements,"
% 2018 Network Traffic Measurement and Analysis Conference (TMA), Vienna, 2018.
%
% Accepted version (open access): https://publik.tuwien.ac.at/files/publik_271503.pdf
% Published version: https://ieeexplore.ieee.org/document/8506494
%
% (C) 2018 Vaclav Raida, TU Wien
% email: vaclav.raida@tuwien.ac.at
% -------------------------------------------------------------------------
clear; clc; close all;

time_zone = 'Europe/Vienna';
t_start = f.str2posix('2016-09-20 00:00:00', time_zone);
t_end   = f.str2posix('2016-10-11 00:00:00', time_zone);

bin_size = 3*3600;  % 3 hour bins
t_bins = t_start : bin_size : t_end;

% Load iPerf throughput measurements
load('data/outdoor_iperf__pos-corr_2016-09-20_to_2016-10-11.mat');  % Variable iperf
iperf_time = [iperf.time];
iperf_rate  = [iperf.dl_received] / 10^6;  % bps -> Mbps
R_binned  = f.bin_signal(iperf_time, iperf_rate,  t_bins);

% Load RSRP and RSRQ as reported by Android smartphone
load('data/outdoor_signal_pos-corr_2016-09-20_to_2016-10-11.mat');  % Variable SIG
RSRP_binned = f.bin_signal(SIG.rsrp.t, SIG.rsrp.s, t_bins);
RSRQ_binned = f.bin_signal(SIG.rsrq.t, SIG.rsrq.s, t_bins);

% Plot signals
figure;
    sp(1) = subplot(3,1,1); hold on; grid on; ylabel('RSRP / dBm');
    stairs(t_bins, [RSRP_binned RSRP_binned(end)]);
    f.plot_time_from_posix(t_start, t_end, time_zone, 0);
    
    sp(2) = subplot(3,1,2); hold on; grid on; ylabel('RSRQ / dB');
    stairs(t_bins, [RSRQ_binned RSRQ_binned(end)]);
    f.plot_time_from_posix(t_start, t_end, time_zone, 0);
        
    sp(3) = subplot(3,1,3); hold on; grid on; ylabel('R / (Mbit/s)');
    stairs(t_bins, [R_binned  R_binned(end)]);
    f.plot_time_from_posix(t_start, t_end, time_zone, 1);
        
    linkaxes(sp, 'x');

% Correlation coefficient
x = RSRQ_binned;
y = R_binned;

r = corrcoef(x.', y.')
figure; hold on; grid on; xlabel('RSRQ / dB'); ylabel('R / (Mbit/s)');
scatter(x, y, '.');


